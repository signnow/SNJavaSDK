package com.signnow.library;

import java.io.IOException;

import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.signnow.config.Config;

public class Webhook {

	public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");	
	static OkHttpClient client = new OkHttpClient();
	
    /// <summary>
    /// Create Webhook that will be Triggered when the Specified Event Takes Place
    /// </summary>
    /// <param name="accessToken"></param>
    /// <param name="webHookobj"> will hold the information of "EventType" =document.create, document.update, document.delete, invite.create, invite.update</param>
    /// and "CallbackUrl" =The URL called when the even is triggered.</param>
    /// <returns>JSONObject containing the ID, Created, Updated</returns>
	public static JSONObject Create(String accessToken,JSONObject webHookobj)
	{
        String json = webHookobj.toJSONString();
		RequestBody body = RequestBody.create(JSON, json);
		Request request=null;
		try {
			request = new Request.Builder()
			  .url(Config.apiHost +"event_subscription")
			  .addHeader("Accept", "application/json")
			  .addHeader("Authorization",  "Bearer " + accessToken)
			  .post(body)
			  .build();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
	  Response response;
	try {
		response = client.newCall(request).execute();
		JSONObject jsonObj=null;
		if(response.isSuccessful())
		{
			String str= response.body().string();
			JSONParser parser = new JSONParser();
			try {
				jsonObj = (JSONObject)parser.parse(str);
				return jsonObj;
				}
			catch (ParseException e) {
				e.printStackTrace();
				}
		}
	} catch (IOException e) {
		e.printStackTrace();
	}
	  return  null;
	}
	
	 /// <summary>
    /// Get a List of Current Webhook Subscriptions
    /// </summary>
    /// <param name="accessToken"></param>
    /// <returns>JSONObject with List of Subscriptions</returns>
	
	public static JSONObject List(String accessToken)
	{
		Request request=null;
		try {
			request = new Request.Builder()
			  .url(Config.apiHost +"event_subscription")
			  .addHeader("Accept", "application/json")
			  .addHeader("Authorization",  "Bearer " + accessToken)
			  .get()
			  .build();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
	  Response response;
	try {
		response = client.newCall(request).execute();
		JSONObject jsonObj=null;
		if(response.isSuccessful())
		{
			String str= response.body().string();
			JSONParser parser = new JSONParser();
			try {
				jsonObj = (JSONObject)parser.parse(str);
				return jsonObj;
				}
			catch (ParseException e) {
				e.printStackTrace();
				}
		}
	} catch (IOException e) {
		e.printStackTrace();
	}
	  return  null;
	}
	
	//Delete WebHooks
	
	public static JSONObject Delete(String accessToken,String subscriptionId)
	{
		Request request=null;
		try {
			request = new Request.Builder()
			  .url(Config.apiHost +"event_subscription/" + subscriptionId)
			  .addHeader("Accept", "application/json")
			  .addHeader("Authorization",  "Bearer " + accessToken)
			  .delete()
			  .build();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
	  Response response;
	try {
		response = client.newCall(request).execute();
		JSONObject jsonObj=null;
		if(response.isSuccessful())
		{
			String str= response.body().string();
			JSONParser parser = new JSONParser();
			try {
				jsonObj = (JSONObject)parser.parse(str);
				return jsonObj;
				}
			catch (ParseException e) {
				e.printStackTrace();
				}
		}
	} catch (IOException e) {
		e.printStackTrace();
	}
	  return  null;
	}
}
