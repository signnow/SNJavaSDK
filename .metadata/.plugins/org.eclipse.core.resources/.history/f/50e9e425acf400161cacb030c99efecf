package com.signnow.library;

import java.io.IOException;

import com.signnow.config.Config;

import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class DocumentGroup {

public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");	
	static OkHttpClient client = new OkHttpClient();
	
	public static String Create(String accessToken, String docGroupObjStr)
	{
		RequestBody body = RequestBody.create(JSON, docGroupObjStr);
		Request request = new Request.Builder()
		  .url(Config.apiHost +"documentgroup")
		  .addHeader("Accept", "application/json")
		  .addHeader("Authorization", "Bearer " + accessToken)
		  .post(body)
		  .build();		
		Response response;
		try {
			response = client.newCall(request).execute();
			if(response.isSuccessful())
			{
			return  response.body().string();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}		
		return null;
	}

	//Get Document Group
	public static String Get(String accessToken, String docGroupId)
	{
		String url = (docGroupId.length() > 0) ? "/documentgroup/" + docGroupId : "/user/documentgroups";
		Request request = new Request.Builder()
		  .url(Config.apiHost +url)
		  .addHeader("Accept", "application/json")
		  .addHeader("Authorization", "Bearer " + accessToken)
		  .get()
		  .build();		
		Response response;
		try {
			response = client.newCall(request).execute();
			if(response.isSuccessful())
			{
			return  response.body().string();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}		
		return null;
	}


	//Delete Document Group
	public static String Delete(String accessToken, String docGroupId)
	{
		Request request = new Request.Builder()
		  .url(Config.apiHost +"documentgroup/" + docGroupId)
		  .addHeader("Accept", "application/json")
		  .addHeader("Authorization", "Bearer " + accessToken)
		  .delete()
		  .build();		
		Response response;
		try {
			response = client.newCall(request).execute();
			if(response.isSuccessful())
			{
			return  response.body().string();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}		
		return null;
	}

	//groupInvite
	public static String groupInvite(String accessToken, String groupId,String inviteGrpModel)
	{
		RequestBody body = RequestBody.create(JSON, inviteGrpModel);
		Request request = new Request.Builder()
		  .url(Config.apiHost +"documentgroup/" + groupId + "/groupinvite")
		  .addHeader("Accept", "application/json")
		  .addHeader("Authorization", "Bearer " + accessToken)
		  .post(body)
		  .build();		
		Response response;
		try {
			response = client.newCall(request).execute();
			if(response.isSuccessful())
			{
			return  response.body().string();
			}
		} catch (IOException e) {
			e.printStackTrace();
		}		
		return null;
	}
}
