package com.signnow.examples;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.google.gson.Gson;
import com.google.gson.JsonObject;
import com.google.gson.stream.JsonReader;
import com.signnow.config.Config;
import com.signnow.library.Document;
import com.signnow.library.OAuth2;
import com.signnow.library.User;

public class Example {

	public static void main(String args[]) throws IOException{
		
		 String accountUser = "bkaranam@barracuda.com";
         String accountPass = "May@2016";
         String testEmailAddress = "karanambhanu@gmail.com";
         String clientId= "0fccdbc73581ca0f9bf8c379e6a96813";
         String clientSecret="3719a124bcfc03c534d4f5c05b5a196b";

         //Client ID, Client Secret, API URL
         //config.init("[YOUR CLIENT ID]", "[YOUR CLIENT SECRET]", "https://api-eval.cudasign.com/");
         Config.init("0fccdbc73581ca0f9bf8c379e6a96813", "3719a124bcfc03c534d4f5c05b5a196b", "https://api-eval.cudasign.com/");
 
         //Request OAuth Token - Start
         System.out.println("Requesting OAuth Token");
         String OAuthRes = OAuth2.requestToken(accountUser, accountPass,"*","JSON");
         JSONParser parser = new JSONParser();
         String access_token = "";
    	 String refresh_token = "";
    	 Long expires_in;
         try {
        	 JSONObject json = (JSONObject) parser.parse(OAuthRes);
        	 access_token = (String) json.get("access_token");
        	 refresh_token = (String) json.get("refresh_token");
        	 expires_in = (Long)json.get("expires_in");
        	 
        	 System.out.println("access_token ==> "+access_token);
        	 System.out.println("refresh_token ==> "+refresh_token); 
             System.out.println("expires_in ==> "+expires_in); 
			
		} catch (ParseException e) {
			e.printStackTrace();
		}
       //Request OAuth Token - End
         
       //Verify OAuth Token          
         System.out.println("Verifying OAuth2 Token");
         String OAuthVRes = OAuth2.Verify(access_token,"JSON");
    	 try {
			JSONObject json = (JSONObject) parser.parse(OAuthVRes);
			String verify_access_token = (String) json.get("access_token");			
			if(access_token.equals(verify_access_token))
			{
				System.out.println("verified...");
			}
			
		} catch (ParseException e) {
			e.printStackTrace();
		}                
       //Verify OAuth Token - End 
    	 
    	 
         
       //=======================
         // User
       //=======================
         
       //Create New CudaSign User Account
         String resultFormat="JSON";
    	 String newAccountRes = User.Create("demo2@demo2.com", "123456789", "John", "Carter",clientId,clientSecret,resultFormat);
    	 try
    	 {
    		 JSONObject json = (JSONObject) parser.parse(newAccountRes);
    		 String id = (String)json.get("id");
    		 System.out.println("id is"+id);
    	 }
    	 catch(ParseException e)
    	 {
    		 e.printStackTrace();
    	 }
         //Console.WriteLine(newAccountRes["id"] + "\r\n\r\n\r\n");
         
         
       //Retreive User Account Information
         
         String userInfo= User.Get(access_token,"JSON");
         System.out.println("UserInfo is..."+userInfo);
         
         //=======================
         // Document
         //=======================
         
         //Create a New Document
         System.out.println("Creating New Document");
         boolean extra_fileds=false;

         File file = new File("1-tkt.pdf").getAbsoluteFile();
         String name= "1-tkt.pdf";
         String fileExtn="pdf";
         String newDocRes = Document.Create(access_token,file,name,extra_fileds,resultFormat,fileExtn);
         String documentId=null;
         try {
			JSONObject json = (JSONObject) parser.parse(newDocRes);
			documentId=(String)json.get("id");
			System.out.println("New Document ID : "+ documentId);
		} catch (ParseException e) {
			e.printStackTrace();
		}
         
       //Create a New Document and Extract the Fields
         System.out.println("Creating New Document & Extracting Fields");
         File docFile = new File("Example Fields.docx").getAbsoluteFile();
         String docFileName= "Example Fields.docx";
         fileExtn="docx";
         
         String docRes = Document.Create(access_token,docFile,docFileName,true,resultFormat,fileExtn);
         String docId=null;
         try {
			JSONObject json = (JSONObject) parser.parse(newDocRes);
			docId=(String)json.get("id");
			System.out.println("New Document ID using Extract Fields:  "+ docId);
		} catch (ParseException e) {
			e.printStackTrace();
		}
         
         //Delete Document
         String deleteDocRes = Document.Delete(access_token, docId);
         JSONObject json=null;
		try {
			json = (JSONObject) parser.parse(deleteDocRes);
		} catch (ParseException e) {
			e.printStackTrace();
		}
         String status =(String)json.get("status");
         System.out.println("Deleted Document ID :" + docId + "Deletion Status :"+  status);
         
       //Download Document
         System.out.println("Downloading Document");
         InputStream downloadDocRes = Document.download(access_token, documentId);         
        
         // provide the path where the document to be downloaded with a name to it.
         String filePath = "C://TEST//sample.pdf";
         FileOutputStream fos = new FileOutputStream(new File(filePath));
         int inByte;
         while((inByte = downloadDocRes.read()) != -1)
              fos.write(inByte);
         downloadDocRes.close();
         fos.close();
         System.out.println("Document  downloaded");		

         
  //Send Free Form Invite. Below are the two steps to perform this.
         
         
       //STEP 1: Create a New Document
         System.out.println("Creating New Document");

         file = new File("pdf-sample.pdf").getAbsoluteFile();
         name= "pdf-sample.pdf";
         fileExtn="pdf";
         newDocRes = Document.Create(access_token,file,name,extra_fileds,resultFormat,fileExtn);
         String invite_document_Id=null;
         try {
			json = (JSONObject) parser.parse(newDocRes);
			invite_document_Id=(String)json.get("id");
			System.out.println("Invite Document ID : "+ invite_document_Id);
		} catch (ParseException e) {
			e.printStackTrace();
		}
         
         //STEP 2:  Get the document id from STEP 1. Construct the invite object and send free form invite 
         
         System.out.println("Sending free form Invite");         
         JSONObject inviteDataObj = new JSONObject();
         inviteDataObj.put("from", accountUser);
         inviteDataObj.put("to", testEmailAddress);
         String inviteDataObjStr = inviteDataObj.toString();
         boolean disableEmail= false;
         String sendFreeFormInviteRes = Document.Invite(access_token, invite_document_Id, inviteDataObjStr,resultFormat,disableEmail);
         System.out.println("Invite Status: "+ sendFreeFormInviteRes);   
         // parse the response and show the invite id and status
         String invite_id=null;
         try {
			json = (JSONObject) parser.parse(sendFreeFormInviteRes);
			invite_id=(String)json.get("id");
			status=(String)json.get("result");
			System.out.println("Freeform invite done : invite_id "+ invite_id+ " status :"+ status);
		} catch (ParseException e) {
			e.printStackTrace();
		}
        // END free form invite. 
         
       //Cancel Invite
         System.out.println("Canceling Invite");
         String cancelInviteRes = Document.CancelInvite(access_token, invite_id,resultFormat);         
        /* try {
 			json = (JSONObject) parser.parse(cancelInviteRes);
 			status=(String)json.get("result");
 			System.out.println("Cancel Invite Status: "+status);
 		} catch (ParseException e) {
 			e.printStackTrace();
 		}*/
         
	}
}
