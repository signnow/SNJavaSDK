package com.signnow.library;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;

import okhttp3.FormBody;
import okhttp3.HttpUrl;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

import org.json.simple.JSONObject;

import com.signnow.config.Config;

public class OAuth2 {
	
	public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");
	
	static OkHttpClient client = new OkHttpClient();
	
	public static String requestToken(String email, String password, String scope, String resultFormat) throws IOException {
		String json = "{'username':'"+email+"','password':'"+password+"','grant_type':'pasword','scope':'*'"+"}";
		System.out.println("JSON..."+ json);
		
		/*RequestBody body = RequestBody.create(JSON, json);
		HttpUrl.Builder urlBuilder = HttpUrl.parse(Config.apiHost +"oauth2/token").newBuilder();
		urlBuilder.addQueryParameter("username", email);
		urlBuilder.addQueryParameter("password", password);
		urlBuilder.addQueryParameter("grant_type", "password");
		urlBuilder.addQueryParameter("scope", "*");
		String url = urlBuilder.build().toString();

		Request request = new Request.Builder()
		                     .url(url)
		                     .addHeader("Authorization", "Basic "+Config.encodedClientCredentials)
		                     .addHeader("Content-Type", "application/x-www-form-urlencoded")
		                     .build();
		
		 Response response = client.newCall(request).execute();
		 return response.body().toString();*/
		
		RequestBody formBody = new FormBody.Builder()
        .add("username",email)
        .add("password", password)
        .add("grant_type", "password")
        .add("scope","*")
        .build();
		
		//RequestBody body = RequestBody.create(JSON, json);
	  Request request = new Request.Builder()
	      .url(Config.apiHost +"oauth2/token")
	      .addHeader("Authorization", "Basic "+Config.encodedClientCredentials)
	      .addHeader("Content-Type", "application/x-www-form-urlencoded")
	      .post(formBody)
	      .build();
	  Response response = client.newCall(request).execute();
	  System.out.println(response.body().toString());
	  return response.body().toString();
	}

	/*public static JSONObject requestToken(String email, String password, String scope, String resultFormat)
	{
		CloseableHttpClient httpClient = null;
        HttpPost httpPost = null;
        CloseableHttpResponse response = null;

        try {

            httpClient = HttpClients.createDefault();
            httpPost = new HttpPost(Config.apiHost +"oauth2/token");
            
           // String json = "{"+"'username':'"+email+"',"+"'password':'"+password+"',"+"'grant_type':'"+"password"+"',"+"'scope':'"+scope+"'"+"}";
            String json = "{"+"username:"+email+","+"password:"+password+","+"grant_type:"+"password"+","+"scope:"+scope+""+"}";
            System.out.println("json..."+ json);
            StringEntity entity = new StringEntity(json);
            httpPost.setEntity(entity);

                httpPost.addHeader("Accept", "application/json");
                httpPost.addHeader("Authorization", "Basic " + Config.encodedClientCredentials);
                httpPost.addHeader("Content-Type", "application/x-www-form-urlencoded");
                
            response = httpClient.execute(httpPost);

            if (response.getStatusLine().getStatusCode() != 200) {
                throw new RuntimeException("Failed : HTTP error code : "
                        + response.getStatusLine().getStatusCode());
            }

            BufferedReader br = new BufferedReader(new InputStreamReader(
                    (response.getEntity().getContent())));

            String output;
            System.out.println("Output from Server .... \n");
            while ((output = br.readLine()) != null) {
                System.out.println(output);
            }
        } catch (MalformedURLException e) {

            e.printStackTrace();

        } catch (IOException e) {

            e.printStackTrace();

        } finally {
            try{
                response.close();
                httpClient.close();
            }catch(Exception ex) {
                ex.printStackTrace();
            }
        }
        return null;
		
	}*/
		
}
